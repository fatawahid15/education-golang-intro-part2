package main

import "fmt"

func main() {

	// panic(interface{}) <= its like any type in other language

	// Example of valid input
	process(10)

	// Example of valid input
	process(-3)
}

// panic kinda have some similarity like finally other language, usually we use the try, catch, then finally
// Executed as the last one even tho we got defer in our code

func process(input int) {

	defer fmt.Println("Deffered 1")
	defer fmt.Println("Deffered 2")

	if input < 0 {
		defer fmt.Println("Before Panic")
		panic("Input must be a non-negative number")
		// defer <=> (with or without) fmt.Println("Before Panic") <= this won't work, because ASA we panic, we exiting out of the func
	}
	fmt.Println("Processing input:", input)
}
