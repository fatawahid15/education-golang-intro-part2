package main

import "fmt"

func main() {

	process(10)

}

//deffered will be evaluated immidiately as soon as it is encountered

func process(i int) {

	defer fmt.Println("Deffered i value:", i)
	defer fmt.Println("First Deferred statement executed") // the one that deffered earliest will be processed last
	defer fmt.Println("Second Deferred statement executed")
	defer fmt.Println("Third Deferred statement executed")
	fmt.Println("Normal statement executed")
	i++
	fmt.Println("Normal exec state")
	fmt.Println("Value of i:", i)

}

// Practical use of defer
/*
	- Resource Cleanup
	- Unlocking Mutexes
	- Logging and Tracing
*/

// Best Practices
/*
	- Keep Deferred Actions Short
	- Understand Evaluation Timing
	- Avoid Complex Control Flow
*/
