package main

import "fmt"

// Directly connected to the panic and used to regain control of a panicking goroutine
// passing value only when there's panic
func main() {

	process()
	fmt.Println("Returned from process")

}

func process() {
	defer func() {
		// if r := recover(); r != nil {
		r := recover()
		if r != nil {
			fmt.Println("Recovered:", r)
		}
	}()

	fmt.Println("Start Process")
	panic("Something went wrong!")
	// fmt.Println("End Process")
}

// Practical User Cases
/*
	- Gracefull Recovery
	- Cleanup
	- Logging and Reporting
*/

// Best Practices
/*
	- Use with Defer
	- Avoid Silent Recovery
	- Avoid Overuse
*/
